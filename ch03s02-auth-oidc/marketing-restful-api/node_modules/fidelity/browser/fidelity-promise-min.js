(function(){'use strict';var c=typeof global==='object'&&global&&global.Object===Object&&global,d=c||Function('return this')();const g=0,h=1,i=2,j=Symbol('handlers'),k=Symbol('queue'),l=Symbol('state'),m=Symbol('value');class FidelityPromise{constructor(n){this[k]=[];this[j]=new Handlers();this[l]=g;this[m]=void 0;const o=typeof n;if(o==='function'){tryFunction(n,this);}else if(o!=='undefined'){resolvePromise(this,n);}}get state(){return this[l];}get value(){return this[m];}then(q,s){const t=new FidelityPromise();if(typeof q==='function'){t[j].fulfill=q;}if(typeof s==='function'){t[j].reject=s;}this[k].push(t);process(this);return t;}catch(u){return this.then(null,u);}static promise(w){console.error('Fidelity.promise() is deprecated. Use `new Fidelity.Promise()`.');return new FidelityPromise(w);}static deferred(){let z,A;const p=new FidelityPromise((B,C)=>{z=B;A=C;});return{promise:p,resolve:D=>z(D),reject:E=>A(E)};}static resolve(F){if(F&&F.then)return F;switch(F){case null:return S;case!0:return Q;case!1:return R;case 0:return T;case'':return U;}const p=new FidelityPromise();p[l]=h;p[m]=F;return p;}static reject(G){const p=new FidelityPromise();p[l]=i;p[m]=G;return p;}static all(){const H=[],I=Array.from(arguments).reduce((a,b)=>a.concat(b),[]),J=I.reduce((K,p)=>K.then(()=>p).then(r=>H.push(r)),Promise.resolve(null));return J.then(_=>H);}static race(){const L=Array.from(arguments).reduce((a,b)=>a.concat(b),[]);return new FidelityPromise((M,N)=>{L.forEach(p=>p.then(M).catch(N));});}}FidelityPromise.PENDING=g;FidelityPromise.FULFILLED=h;FidelityPromise.REJECTED=i;class Handlers{constructor(){this.fulfill=null;this.reject=null;}}const O=(()=>{if(d.process&&typeof d.process.nextTick==='function'){return d.process.nextTick;}else if(typeof d.setImmediate==='function'){return d.setImmediate;}else if(typeof d.setTimeout==='function'){return(f,p)=>d.setTimeout(f,0,p);}else{console.error('No nextTick. How we gonna do this?');return(f,p)=>f.call(this,p);}})();function exportModule(P){if(typeof module==='object'&&module.exports){module.exports=P;}else{d[P.name]=P;}}const Q=new FidelityPromise(!0),R=new FidelityPromise(!1),S=new FidelityPromise(null),T=new FidelityPromise(0),U=new FidelityPromise('');function tryFunction(V,W){try{V(v=>resolvePromise(W,v),r=>transition(W,i,r));}catch(e){transition(W,i,e);}}function resolvePromise(p,x){if(x===p){transition(p,i,new TypeError('The promise and its value are the same.'));return;}const X=typeof x;if(x&&(X==='function'||X==='object')){let Y=!1;try{const Z=x.then;if(Z&&typeof Z==='function'){Z.call(x,y=>{if(!Y){resolvePromise(p,y);Y=!0;}},r=>{if(!Y){transition(p,i,r);Y=!0;}});}else{transition(p,h,x);Y=!0;}}catch(e){if(!Y){transition(p,i,e);Y=!0;}}}else{transition(p,h,x);}}function process(p){if(p[l]===g)return;O(processNextTick,p);return p;}function processNextTick(p){let a1,qp;while(p[k].length){qp=p[k].shift();if(p[l]===h){a1=qp[j].fulfill||(v=>v);}else if(p[l]===i){a1=qp[j].reject||(r=>{throw r;});}try{resolvePromise(qp,a1(p[m]));}catch(e){transition(qp,i,e);continue;}}}function transition(p,c1,d1){if(p[l]===c1||p[l]!==g)return;p[l]=c1;p[m]=d1;return process(p);}exportModule(FidelityPromise);}).call(this);

